image: debian:11

# makes git submodules work
variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - setup
  - test
  - build
  - deploy

# rebuild alpine docker container.
docker:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/alpine.Dockerfile -t "$CI_REGISTRY_IMAGE:alpine"
    - docker build . -f scripts/deploy.Dockerfile -t "$CI_REGISTRY_IMAGE:deploy"
    - docker push "$CI_REGISTRY_IMAGE:alpine"
    - docker push "$CI_REGISTRY_IMAGE:deploy"
  only:
    - docker

docker:mingw64:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/mingw64.dockerfile -t "$CI_REGISTRY_IMAGE/mingw64"
    - docker push "$CI_REGISTRY_IMAGE/mingw64"
  only:
    refs:
      - master
    changes:
      - scripts/mingw64.dockerfile

build:mingw64:
  image: registry.gitlab.com/xfbs/passgen/mingw64
  stage: build
  script:
    - cmake -S . -B build-mingw64 -DCMAKE_TOOLCHAIN_FILE=scripts/mingw64-gcc.cmake -DCMAKE_BUILD_TYPE=Release -DPASSGEN_STATIC=y
    - cd build-mingw64
    - make -j
    - cpack -G ZIP
  artifacts:
    paths:
      - build-mingw64
    expire_in: 1 week

docker:macos:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/macos.dockerfile -t "$CI_REGISTRY_IMAGE/macos"
    - docker push "$CI_REGISTRY_IMAGE/macos"
  only:
    refs:
      - master
    changes:
      - scripts/macos.dockerfile

build:macos:
  image: registry.gitlab.com/xfbs/passgen/macos
  stage: build
  script:
    - cmake -S . -B build-macos -DLIBPASSGEN_SHARED=NO -DCMAKE_BUILD_TYPE=Release -DBUILD_BENCH=NO -DCMAKE_TOOLCHAIN_FILE=scripts/macos-toolchain.cmake
    - cmake --build build-macos
    - cd build-macos && cpack -G TXZ
  artifacts:
    paths:
      - build-macos
    expire_in: 1 week

docker:riscv64:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/riscv64.dockerfile -t "$CI_REGISTRY_IMAGE/riscv64"
    - docker push "$CI_REGISTRY_IMAGE/riscv64"
  only:
    refs:
      - master
    changes:
      - scripts/riscv64.dockerfile

docker:amd64:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/amd64.dockerfile -t "$CI_REGISTRY_IMAGE/amd64"
    - docker push "$CI_REGISTRY_IMAGE/amd64"
  only:
    refs:
      - master
    changes:
      - scripts/amd64.dockerfile

docker:aarch64:
  image: docker
  stage: setup
  services:
    - docker:dind
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build . -f scripts/aarch64.dockerfile -t "$CI_REGISTRY_IMAGE/aarch64"
    - docker push "$CI_REGISTRY_IMAGE/aarch64"
  only:
    refs:
      - master
    changes:
      - scripts/aarch64.dockerfile

test:aarch64:
  image: registry.gitlab.com/xfbs/passgen/aarch64
  stage: test
  script:
    - cmake -S . -B build-aarch64 -GNinja -DCMAKE_TOOLCHAIN_FILE=scripts/aarch64-gcc.cmake -DCMAKE_BUILD_TYPE=Debug
    - cmake --build build-aarch64
    - qemu-aarch64-static -L /usr/aarch64-linux-gnu/ ./build-aarch64/src/tests/passgen-test

build:aarch64:
  image: registry.gitlab.com/xfbs/passgen/aarch64
  stage: build
  script:
    - cmake -S . -B build-aarch64 -GNinja -DCMAKE_TOOLCHAIN_FILE=scripts/aarch64-gcc.cmake -DCMAKE_BUILD_TYPE=Release
    - cd build-aarch64
    - ninja
    - qemu-aarch64-static -L /usr/aarch64-linux-gnu/ ./src/tests/passgen-test
    - cpack -G TXZ
    - cpack -G DEB
  artifacts:
    paths:
      - build-aarch64
    expire_in: 1 week

sanitize:
  image: registry.gitlab.com/xfbs/passgen/amd64
  stage: test
  script:
    - CC=clang scripts/run_sanitizer.sh Address
    - CC=clang scripts/run_sanitizer.sh Memory
    - CC=clang scripts/run_sanitizer.sh Undefined
    - CC=clang scripts/run_sanitizer.sh Leak

test:amd64:
  image: registry.gitlab.com/xfbs/passgen/amd64
  stage: test
  script:
    - CC=clang ./scripts/gen_coverage.sh passgen-test build-clang
    - CC=gcc ./scripts/gen_coverage.sh passgen-test build-gcc
  artifacts:
    paths:
      - build-clang/ccov/passgen-test
      - build-gcc/ccov/passgen-test
    expire_in: 1 week

test:alpine:
  image: registry.gitlab.com/xfbs/passgen:alpine
  stage: test
  script:
    - cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DUSE_BACKTRACE=NO -GNinja
    - cmake --build build
    - ./build/src/tests/passgen-test -v
    - valgrind ./build/src/tests/passgen-test -v

test:riscv64:
  image: registry.gitlab.com/xfbs/passgen/riscv64
  stage: test
  script:
    - cmake -S . -B build-riscv64 -GNinja -DCMAKE_TOOLCHAIN_FILE=scripts/riscv64-gcc.cmake -DCMAKE_BUILD_TYPE=Debug
    - cmake --build build-riscv64
    - qemu-riscv64-static -L /usr/riscv64-linux-gnu/ ./build-riscv64/src/tests/passgen-test

build:riscv64:
  image: registry.gitlab.com/xfbs/passgen/riscv64
  stage: build
  script:
    - cmake -S . -B build-riscv64 -GNinja -DCMAKE_TOOLCHAIN_FILE=scripts/riscv64-gcc.cmake -DCMAKE_BUILD_TYPE=Release
    - cd build-riscv64
    - ninja
    - qemu-riscv64-static -L /usr/riscv64-linux-gnu/ ./src/tests/passgen-test
    - cpack -G TXZ
    - cpack -G DEB
  artifacts:
    paths:
      - build-riscv64
    expire_in: 1 week

# build stuff on ubuntu.
build:amd64:
  image: registry.gitlab.com/xfbs/passgen/amd64
  stage: build
  script:
    - mkdir build-amd64 && cd build-amd64
    - cmake -GNinja -DCMAKE_UNITY_BUILD=YES -DCMAKE_BUILD_TYPE=Release ..
    - ninja
    - ./src/tests/passgen-test
    - cpack -G TXZ
    - cpack -G DEB
  artifacts:
    paths:
      - build-amd64
    expire_in: 1 week

# build stuff on alpine.
build:alpine:
  image: registry.gitlab.com/xfbs/passgen:alpine
  stage: build
  script:
    - mkdir -p build-alpine-release && cd build-alpine-release
    - cmake -GNinja -DCMAKE_UNITY_BUILD=YES -DCMAKE_BUILD_TYPE=Release -DPASSGEN_STATIC=y ..
    - ninja
    - ./src/tests/passgen-test
    - cpack -G TXZ
  artifacts:
    paths:
      - build-alpine-release
    expire_in: 1 week

pages:
  image: registry.gitlab.com/xfbs/passgen:deploy
  stage: deploy
  dependencies:
    - test:amd64
    - build:alpine
    - build:amd64
    - build:macos
    - build:riscv64
    - build:mingw64
  script:
    - mkdir -p public/coverage
    - mv build-clang/ccov/passgen-test public/coverage/llvm-cov
    - mv build-gcc/ccov/passgen-test public/coverage/lcov
    - doxygen Doxyfile
    - mv docs/html public/doxygen
    - mkdir public/badges
    - python3 scripts/docs_coverage.py docs/xml/ --badge public/badges/docs.svg --noerror
    - mkdir public/nightly
    - cp build-alpine-release/passgen-*-Linux.tar.xz public/nightly/passgen-linux-musl-amd64.tar.xz
    - cp build-amd64/passgen-*-Linux.tar.xz public/nightly/passgen-linux-amd64.tar.xz
    - cp build-amd64/passgen_*_amd64.deb public/nightly/passgen-linux-amd64.deb
    - cp build-riscv64/passgen-*-Linux.tar.xz public/nightly/passgen-linux-riscv64.tar.xz
    - cp build-riscv64/passgen_*_riscv64.deb public/nightly/passgen-linux-riscv64.deb
    - cp build-macos/passgen-*-Darwin.tar.xz public/nightly/passgen-macos-amd64.tar.xz
    - cp build-mingw64/passgen-*-win64.zip public/nightly/passgen-win64-amd64.tar.xz
  artifacts:
    paths:
      - public
    expire_in: 30 days
  only:
    - master
